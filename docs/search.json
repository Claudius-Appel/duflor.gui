[{"path":"https://Claudius-Appel.github.io/duflor.gui/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Claudius Appel. Author, maintainer.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Appel C (2024). duflor.gui: Frontend duflor-package. R package version 0.0.1.9023.","code":"@Manual{,   title = {duflor.gui: Frontend for duflor-package},   author = {Claudius Appel},   year = {2024},   note = {R package version 0.0.1.9023}, }"},{"path":"https://Claudius-Appel.github.io/duflor.gui/index.html","id":"duflorgui","dir":"","previous_headings":"","what":"Frontend for duflor-package","title":"Frontend for duflor-package","text":"goal duflor.gui …","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Frontend for duflor-package","text":"can install development release versions duflor.gui like : help-vignettes downloaded, use instead: Vignettes rendered documents discussing specific topics within package. Installing recommended, required utilising package .","code":"# release devtools::install_github(\"https://github.com/Claudius-Appel/duflor.gui@master\") # development devtools::install_github(\"https://github.com/Claudius-Appel/duflor.gui@dev\") devtools::install_github(\"https://github.com/Claudius-Appel/duflor.gui@master\"   ,build_vignettes = T) devtools::install_github(\"https://github.com/Claudius-Appel/duflor.gui@dev\"   ,build_vignettes = T)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/index.html","id":"prerequisites","dir":"","previous_headings":"Installation","what":"Prerequisites","title":"Frontend for duflor-package","text":"Installing package GitHub requires installation R-package devtools:","code":"install.packages(\"devtools\")"},{"path":"https://Claudius-Appel.github.io/duflor.gui/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Claudius Appel Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/convert_pixels_to_area_gui.html","id":null,"dir":"Reference","previous_headings":"","what":"convert pixel counts to an area based on the known area of an identifier-dot. — convert_pixels_to_area_gui","title":"convert pixel counts to an area based on the known area of an identifier-dot. — convert_pixels_to_area_gui","text":"convert pixel counts area based known area identifier-dot.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/convert_pixels_to_area_gui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert pixel counts to an area based on the known area of an identifier-dot. — convert_pixels_to_area_gui","text":"","code":"convert_pixels_to_area_gui(pixel.counts)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/convert_pixels_to_area_gui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert pixel counts to an area based on the known area of an identifier-dot. — convert_pixels_to_area_gui","text":"pixel.counts list containing following pixel-counts: \"bex_green_HSV\" \"bex_drought_HSV\" \"bex_complete_HSV\" \"bex_identifier_HSV\" pixel-count identifier must present, whereas others optional. calculated area internally unit-less. However, default value duflor.default_identifier_area 0.503 [cm^2], areas computed function also [cm^2]. assumed area identifier can modified excuting options(duflor.default_identifier_area = <value_in_square_centimeters>) prior calling function","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/convert_pixels_to_area_gui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert pixel counts to an area based on the known area of an identifier-dot. — convert_pixels_to_area_gui","text":"list computed areas key listed pixel.counts. Additionally, two meta-values returned well: identifier-area used calculating area (whichever value set option duflor.default_identifier_area) area singe pixel values [cm^2]","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/convert_pixels_to_area_gui.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"convert pixel counts to an area based on the known area of an identifier-dot. — convert_pixels_to_area_gui","text":"restructured version duflor::convert_pixels_to_area, suitable needs specific app.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/duflor_gui.html","id":null,"dir":"Reference","previous_headings":"","what":"Start the duflor-gui via this function importFrom shiny importFrom stringr str_ importFrom stringr str_ — duflor_gui","title":"Start the duflor-gui via this function importFrom shiny importFrom stringr str_ importFrom stringr str_ — duflor_gui","text":"Start duflor-gui via function importFrom shiny importFrom stringr str_ importFrom stringr str_","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/duflor_gui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start the duflor-gui via this function importFrom shiny importFrom stringr str_ importFrom stringr str_ — duflor_gui","text":"","code":"duflor_gui()"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/duflor_gui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start the duflor-gui via this function importFrom shiny importFrom stringr str_ importFrom stringr str_ — duflor_gui","text":".","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/execute_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"wrapper-function facilitating single- and multi-image analysis. — execute_analysis","title":"wrapper-function facilitating single- and multi-image analysis. — execute_analysis","text":"wrapper-function facilitating single- multi-image analysis.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/execute_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"wrapper-function facilitating single- and multi-image analysis. — execute_analysis","text":"","code":"execute_analysis(input, DATA, DEBUGKEYS, FLAGS)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/execute_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"wrapper-function facilitating single- and multi-image analysis. — execute_analysis","text":"input input respective shiny-component DATA DATA respective shiny-component DEBUGKEYS DEBUGKEYS respective shiny-component FLAGS FLAGS respective shiny-component","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/execute_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"wrapper-function facilitating single- and multi-image analysis. — execute_analysis","text":"list components results: results-data passed-execute_multiple() execute_single()","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/execute_multiple.html","id":null,"dir":"Reference","previous_headings":"","what":"execute analysis on multiple images, and return their results — execute_multiple","title":"execute analysis on multiple images, and return their results — execute_multiple","text":"single-image analysis, see execute_single()","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/execute_multiple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"execute analysis on multiple images, and return their results — execute_multiple","text":"","code":"execute_multiple(files, input, DATA, DEBUGKEYS, FLAGS)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/execute_multiple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"execute analysis on multiple images, and return their results — execute_multiple","text":"files files analyse input input respective shiny-component DATA DATA respective shiny-component DEBUGKEYS DEBUGKEYS respective shiny-component FLAGS FLAGS respective shiny-component","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/execute_multiple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"execute analysis on multiple images, and return their results — execute_multiple","text":"results_object, see update_resultsObject()","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/execute_single.html","id":null,"dir":"Reference","previous_headings":"","what":"execute analysis on a single image, and return its results — execute_single","title":"execute analysis on a single image, and return its results — execute_single","text":"single-image analysis, see execute_multiple()","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/execute_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"execute analysis on a single image, and return its results — execute_single","text":"","code":"execute_single(file, input, DATA, DEBUGKEYS, FLAGS)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/execute_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"execute analysis on a single image, and return its results — execute_single","text":"file file analyse input input respective shiny-component DATA DATA respective shiny-component DEBUGKEYS DEBUGKEYS respective shiny-component FLAGS FLAGS respective shiny-component","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/execute_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"execute analysis on a single image, and return its results — execute_single","text":"results_object, see update_resultsObject()","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/get_group.html","id":null,"dir":"Reference","previous_headings":"","what":"trims numbers from groups from character-vector — get_group","title":"trims numbers from groups from character-vector — get_group","text":"trims numbers groups character-vector","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/get_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"trims numbers from groups from character-vector — get_group","text":"","code":"get_group(names)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/get_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"trims numbers from groups from character-vector — get_group","text":"names .","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/get_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"trims numbers from groups from character-vector — get_group","text":".","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/get_image_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"retrieves image dimension via call to system interface — get_image_dimensions","title":"retrieves image dimension via call to system interface — get_image_dimensions","text":"retrieves image dimension via call system interface","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/get_image_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"retrieves image dimension via call to system interface — get_image_dimensions","text":"","code":"get_image_dimensions(path)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/get_image_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"retrieves image dimension via call to system interface — get_image_dimensions","text":"path path file measure","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/get_image_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"retrieves image dimension via call to system interface — get_image_dimensions","text":"list(width=dbl,height=dbl)","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/get_KPI_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — get_KPI_plot","title":"Title — get_KPI_plot","text":"Title","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/get_KPI_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — get_KPI_plot","text":"","code":"get_KPI_plot(input, DATA)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/get_KPI_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — get_KPI_plot","text":"ggplot-object respective KPI","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/limit_identifier_coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"restrict area in which identifier-pixels are considered ","title":"restrict area in which identifier-pixels are considered ","text":"function applied identifier-range. intention exclude random pixels definitely attributed identifier-data.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/limit_identifier_coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"restrict area in which identifier-pixels are considered ","text":"","code":"limit_identifier_coordinates(   spectrums_object,   image_dimensions,   identifiersearch_x0,   identifiersearch_x1,   identifiersearch_y0,   identifiersearch_y1 )"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/limit_identifier_coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"restrict area in which identifier-pixels are considered ","text":"spectrums_object return object extract_pixels_HSV() image_dimensions dimensions image identifiersearch_x0 respective coordinate search bounding rectangle identifiersearch_x1 respective coordinate search bounding rectangle identifiersearch_y0 respective coordinate search bounding rectangle identifiersearch_y1 respective coordinate search bounding rectangle","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/limit_identifier_coordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"restrict area in which identifier-pixels are considered ","text":"modified spectrums_object","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/prepare_resultsObject.html","id":null,"dir":"Reference","previous_headings":"","what":"prepare the dataframe-object into which all results are to be merged. — prepare_resultsObject","title":"prepare the dataframe-object into which all results are to be merged. — prepare_resultsObject","text":"results requires fields full_path image_date image_name processed_width processed_height  names(DATA$spectrums$lower_bound): %spectrum%_count img.fraction (maybe valuable?) %spectrum%_area (results duflor::convert_pixels_to_area()) %spectrum%_fraction (defined %spectrum%_count/(sum(<all_plant_spectrums>_count))","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/prepare_resultsObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prepare the dataframe-object into which all results are to be merged. — prepare_resultsObject","text":"","code":"prepare_resultsObject(input, DATA, DEBUGKEYS)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/prepare_resultsObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prepare the dataframe-object into which all results are to be merged. — prepare_resultsObject","text":"input shiny-app input-object DATA shiny-app DATA-reactives DEBUGKEYS shiny-app DEBUGKEYS-reactives","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/prepare_resultsObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"prepare the dataframe-object into which all results are to be merged. — prepare_resultsObject","text":"results-csv-framework.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/render_selected_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"render mask based on input data — render_selected_mask","title":"render mask based on input data — render_selected_mask","text":"render mask based input data","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/render_selected_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"render mask based on input data — render_selected_mask","text":"","code":"render_selected_mask(input, DATA, FLAGS)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/render_selected_mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"render mask based on input data — render_selected_mask","text":"input input respective shiny-component DATA DATA respective shiny-component FLAGS FLAGS respective shiny-component","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/select_spectra_gui_comp.html","id":null,"dir":"Reference","previous_headings":"","what":"generate and call a modal-dialogue which lets you select which spectrums to analyse. — select_spectra_gui_comp","title":"generate and call a modal-dialogue which lets you select which spectrums to analyse. — select_spectra_gui_comp","text":"Additionally, queries component radio_analysis_type preselect common results different types analyses","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/select_spectra_gui_comp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate and call a modal-dialogue which lets you select which spectrums to analyse. — select_spectra_gui_comp","text":"","code":"select_spectra_gui_comp(input)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/select_spectra_gui_comp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate and call a modal-dialogue which lets you select which spectrums to analyse. — select_spectra_gui_comp","text":"input input-shiny-component","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/select_spectra_gui_comp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generate and call a modal-dialogue which lets you select which spectrums to analyse. — select_spectra_gui_comp","text":".","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/setup_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"setup parallel backend for a given number of cores. — setup_parallel","title":"setup parallel backend for a given number of cores. — setup_parallel","text":"setup parallel backend given number cores.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/setup_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"setup parallel backend for a given number of cores. — setup_parallel","text":"","code":"setup_parallel(used_cores, cluster_type)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/setup_parallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"setup parallel backend for a given number of cores. — setup_parallel","text":"used_cores number cores designated cluster cluster_type either PSOCK FORK. Generally FORK recommended PSOCK, however available systems. See note ","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/setup_parallel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"setup parallel backend for a given number of cores. — setup_parallel","text":".","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/setup_parallel.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"setup parallel backend for a given number of cores. — setup_parallel","text":"Windows, PSOCK-cluster type available.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/shutdown_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"shut down existing parallel cluster — shutdown_parallel","title":"shut down existing parallel cluster — shutdown_parallel","text":"shut existing parallel cluster","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/shutdown_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"shut down existing parallel cluster — shutdown_parallel","text":"","code":"shutdown_parallel()"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/store_KPI_plot_to_file.html","id":null,"dir":"Reference","previous_headings":"","what":"save KPI-plot to file — store_KPI_plot_to_file","title":"save KPI-plot to file — store_KPI_plot_to_file","text":"save KPI-plot file","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/store_KPI_plot_to_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"save KPI-plot to file — store_KPI_plot_to_file","text":"","code":"store_KPI_plot_to_file(input, DATA)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/store_KPI_plot_to_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"save KPI-plot to file — store_KPI_plot_to_file","text":"input input respective shiny-component DATA DATA respective shiny-component","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/store_results_to_file.html","id":null,"dir":"Reference","previous_headings":"","what":"write results of the analysis to file — store_results_to_file","title":"write results of the analysis to file — store_results_to_file","text":"write results analysis file","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/store_results_to_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write results of the analysis to file — store_results_to_file","text":"","code":"store_results_to_file(results, results_path, save_to_xlsx = FALSE)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/store_results_to_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write results of the analysis to file — store_results_to_file","text":"results object write. results_path path write file , sans filesuffix. save_to_xlsx results written .xlsx-file? false, written .csv-file instead.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/store_results_to_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"write results of the analysis to file — store_results_to_file","text":"list containing boolean check whether file written disk successfully complete path resulting file.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/store_results_to_file.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"write results of the analysis to file — store_results_to_file","text":"XLSX-files suggested output additional postprocessing required. data modified , writing csv save space.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/update_resultsObject.html","id":null,"dir":"Reference","previous_headings":"","what":"adds a line of values newline to a df resultsObject — update_resultsObject","title":"adds a line of values newline to a df resultsObject — update_resultsObject","text":"function validate inputs!.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/update_resultsObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"adds a line of values newline to a df resultsObject — update_resultsObject","text":"","code":"update_resultsObject(resultsObject, new_line)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/update_resultsObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"adds a line of values newline to a df resultsObject — update_resultsObject","text":"resultsObject existing dataframe new_line data-vector add","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/update_resultsObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"adds a line of values newline to a df resultsObject — update_resultsObject","text":"updated resultsObject","code":""}]
