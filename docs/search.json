[{"path":"https://Claudius-Appel.github.io/duflor.gui/articles/general-user-manual.html","id":"general-structure","dir":"Articles","previous_headings":"","what":"General Structure","title":"General user manual for 'duflor.gui'","text":"figure 1, general overview GUI can seen. general, GUI split two regions. grey panel left side contains input-controls relevant setup configuration analysis. , steps must done get results located . Consequently, buttons/drop--menus/tables/controls right side app pertaining results. noted several controls won’t anything results computed1.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/articles/general-user-manual.html","id":"steps-required-to-run-an-analysis-input-controls","dir":"Articles","previous_headings":"General Structure","what":"Steps required to run an analysis / Input Controls","title":"General user manual for 'duflor.gui'","text":"section deal detail controls grey panel. Generally, steps designed done order, top bottom2: Selecting folder containing input images.Note: folder must contain images intended evaluated, extends subfolders. select folder foo analysed, image foo/bar.png evaluated. However, images foo/baz/bar.png foo/baz/another/ridiculous/nesting/plant.png also evaluated. Selecting type analysis performed3. Select GFA Leaf Area Analysis/Grünflächenanalyse, WFA intend perform Root Area Analysis/Wurzelflächenanalyse. \\(0 \\le H_0 \\le 359\\), \\(0 \\le H_1 \\le 359\\), \\(H_0 \\lt H_1\\) \\(0 \\le S_0 \\le 1\\), \\(0 \\le S_1 \\le 1\\), \\(S_0 \\lt S_1\\) \\(0 \\le V_0 \\le 1\\), \\(0 \\le V_1 \\le 1\\), \\(V_0 \\lt V_1\\) Experience suggests especially \\(V_0\\)-parameter adjusted carefully. Decide whether image cropped. Cropping explained detail “Cropping Images”. Decide whether restrict area within identifier-dot truely lies. information, see “Restricting area within identifier-dot quantified”. Taking precaution heavily suggested. Decide whether execution run parallel. Parallelisation can significantly reduce execution-time, particularly larger image-sets. ’s use strongly advised number images gets ~40. , might still sensible, author comfortable giving blanket recommendation. information, see “Parallelised execution”. Select date images shot. Decide whether analyse images listed tab Image Files, single one set. Pressing either buttons render GUI unresponsive executing respective workflow, completed various results right side app updated.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/articles/general-user-manual.html","id":"post-execution-steps","dir":"Articles","previous_headings":"General Structure","what":"Post-Execution Steps","title":"General user manual for 'duflor.gui'","text":"analysis finished, controls tabs 2-4 right side app updated.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/articles/general-user-manual.html","id":"tab-2-results---complete","dir":"Articles","previous_headings":"General Structure > Post-Execution Steps","what":"Tab 2: Results - complete","title":"General user manual for 'duflor.gui'","text":"table tab renders results written file \\(1:1\\). bottom, may decide whether results saved .csv-file, .xlsx-file. Generally use .csv suggested smaller file-size; sometimes output data must processed afterwards, saving data .xlsx-file may advantageous.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/articles/general-user-manual.html","id":"tab-3-results---inspect","dir":"Articles","previous_headings":"General Structure > Post-Execution Steps","what":"Tab 3: Results - inspect","title":"General user manual for 'duflor.gui'","text":"third tab lets inspect results based specific spectrum. table exists two simple reasons: “complete” table frequently crowded easily digestible, particularly lower-DPI screens. selecting spectrum file, results applying said spectrum selected file can viewed (see Figure 2). Optionally, contrast “hits” pixels can increased. can particularly helpful trying identify false positive pixels given spectrum (see figure 3)","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/articles/general-user-manual.html","id":"tab-4-results---plots","dir":"Articles","previous_headings":"General Structure > Post-Execution Steps","what":"Tab 4: Results - plots","title":"General user manual for 'duflor.gui'","text":"fourth tab allows view basic plot different KPIs determined. Currently, following KPIs available: area_per_pixel: value denotes “much area”5 equivalent single pixel. resulting area6, number matching pixels, fraction matching pixels relative potential hits","code":""},{"path":[]},{"path":"https://Claudius-Appel.github.io/duflor.gui/articles/general-user-manual.html","id":"tab-1-image-files","dir":"Articles","previous_headings":"General Structure > Edge-cases / special controls","what":"Tab 1: Image Files","title":"General user manual for 'duflor.gui'","text":"tab contains image files analysed. However, also allows view image. particularly useful verifying correctly cropped image, /correctly selected area identifier-dot (suggested extra steps). example application look like can seen figure 4.","code":""},{"path":[]},{"path":[]},{"path":"https://Claudius-Appel.github.io/duflor.gui/articles/general-user-manual.html","id":"cropping-images","dir":"Articles","previous_headings":"I HAVE NO IDEA WHAT TO CALL THIS HEADING > Measures for optimising execution speed","what":"Cropping Images","title":"General user manual for 'duflor.gui'","text":"effective way increasing execution time reduce size data- set analysed. desired area selected described , can optionally reviewed (another) image pressing Render plant-button tab Image Files. -depth description can found vignette","code":""},{"path":[]},{"path":[]},{"path":"https://Claudius-Appel.github.io/duflor.gui/articles/general-user-manual.html","id":"restricting-area-within-which-the-identifier-dot-is-quantified","dir":"Articles","previous_headings":"I HAVE NO IDEA WHAT TO CALL THIS HEADING > Measures for maximising accuracy","what":"Restricting area within which the identifier-dot is quantified","title":"General user manual for 'duflor.gui'","text":"Typically, largest error-source bad inconsistent determination identifier used calculate area spectrums extracted. issue can observed figure 3. counteract , GUI allows limit range within matches identifier-spectrum considered “valid”. matches outside area ignored. select area, follow steps outlined . step corresponds number within figures 5 6: Select image inspect. may select one image within Image Files-Tab Check check-box enable feature. expand previously-hidden panel. Next, press button Select area analyse launch window shown figure 6. Finally, left-click--drag area within identifier-dot resides. selection may contain anything, may size. let go, selection-GUI close, bounding coordinates inserted respective numeric input controls. might tempted make small possible. However, certainly advantageous minimise area much possible, certain buffer-zone kept. position identifier-dot might differ subtly across images, -strict selection might suddenly exclude pixels actually part identifier-dot. difference step can make can observed tables 1 2. Note small example, influence Table 1: Number pixels ‘identifer_dot’, well resulting area example-drought spectrum based given number matched pixels. case, qualified “identifier”-pixels used determine areas. Table 2: Restricting area identifier-dot lies changes given spectrum’s calculated area.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/articles/general-user-manual.html","id":"fine-tuning-hsv-boundaries","dir":"Articles","previous_headings":"I HAVE NO IDEA WHAT TO CALL THIS HEADING > Measures for maximising accuracy","what":"Fine-tuning HSV-boundaries","title":"General user manual for 'duflor.gui'","text":"Determining HSV-boundaries can arduous time-consuming process. recommended frequently via GUI, instead create small script calling relevant functions duflor-package . However, occasion spectrum’s HSV-boundaries must modified - case, spectrum can altered. , follow steps outlined . step corresponds ","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/articles/general-user-manual.html","id":"advanced-debugging","dir":"Articles","previous_headings":"I HAVE NO IDEA WHAT TO CALL THIS HEADING","what":"(Advanced) Debugging","title":"General user manual for 'duflor.gui'","text":"Generally, app tries give reasonable warnings status-messages via small red/yellow/blue message boxes. fairly self-explanatory, pop author thought sensible necessary.","code":""},{"path":[]},{"path":"https://Claudius-Appel.github.io/duflor.gui/articles/general-user-manual.html","id":"development-modifications-issues","dir":"Articles","previous_headings":"","what":"Development, Modifications, Issues","title":"General user manual for 'duflor.gui'","text":"keep development efficient reasonable, certain number requirements reporting problems requesting features. problems arise fixed, must raised issues-section respective package’s Github-Repository. Issues detailed, provide errors output console, step--step guide reproduce issue supply test files trigger issue (applicable/required/sensible). Similarly, additional features/changes raised well, clear outline desired feature. Aside fundamental requirements, TODO","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/articles/general-user-manual.html","id":"reporting-issues","dir":"Articles","previous_headings":"Development, Modifications, Issues","what":"Reporting issues","title":"General user manual for 'duflor.gui'","text":"app, underlying code can reviewed minimal upfront work opening source-code GitHub - either manually downloading , cloning via git. either, navigate duflor- duflor.gui-repository.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/articles/general-user-manual.html","id":"further-development","dir":"Articles","previous_headings":"Development, Modifications, Issues","what":"Further development","title":"General user manual for 'duflor.gui'","text":"free take either packages continue development , abiding licensing terms declared.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Claudius Appel. Author, maintainer.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Appel C (2024). duflor.gui: Frontend duflor-package. R package version 0.0.1.9036.","code":"@Manual{,   title = {duflor.gui: Frontend for duflor-package},   author = {Claudius Appel},   year = {2024},   note = {R package version 0.0.1.9036}, }"},{"path":"https://Claudius-Appel.github.io/duflor.gui/index.html","id":"duflorgui","dir":"","previous_headings":"","what":"Frontend for duflor-package","title":"Frontend for duflor-package","text":"goal duflor.gui …","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Frontend for duflor-package","text":"can install development release versions duflor.gui like : help-vignettes downloaded, use instead: Vignettes rendered documents discussing specific topics within package. Installing recommended, required utilising package .","code":"# release devtools::install_github(\"https://github.com/Claudius-Appel/duflor.gui@master\") # development devtools::install_github(\"https://github.com/Claudius-Appel/duflor.gui@dev\") devtools::install_github(\"https://github.com/Claudius-Appel/duflor.gui@master\"   ,build_vignettes = T) devtools::install_github(\"https://github.com/Claudius-Appel/duflor.gui@dev\"   ,build_vignettes = T)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/index.html","id":"prerequisites","dir":"","previous_headings":"Installation","what":"Prerequisites","title":"Frontend for duflor-package","text":"Installing package GitHub requires installation R-package devtools:","code":"install.packages(\"devtools\")"},{"path":"https://Claudius-Appel.github.io/duflor.gui/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Claudius Appel Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/convert_pixels_to_area_gui.html","id":null,"dir":"Reference","previous_headings":"","what":"convert pixel counts to an area based on the known area of an identifier-dot. — convert_pixels_to_area_gui","title":"convert pixel counts to an area based on the known area of an identifier-dot. — convert_pixels_to_area_gui","text":"convert pixel counts area based known area identifier-dot.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/convert_pixels_to_area_gui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert pixel counts to an area based on the known area of an identifier-dot. — convert_pixels_to_area_gui","text":"","code":"convert_pixels_to_area_gui(pixel.counts, identifier_area)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/convert_pixels_to_area_gui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert pixel counts to an area based on the known area of an identifier-dot. — convert_pixels_to_area_gui","text":"pixel.counts list containing following pixel-counts: \"bex_green_HSV\" \"bex_drought_HSV\" \"bex_complete_HSV\" \"bex_identifier_HSV\" pixel-count identifier must present, whereas others optional. calculated area internally unit-less. However, default value duflor.default_identifier_area 0.503 [cm^2], areas computed function also [cm^2]. assumed area identifier can modified excuting options(duflor.default_identifier_area = <value_in_square_centimeters>) prior calling function identifier_area declared size identifier area, [cm^2]","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/convert_pixels_to_area_gui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert pixel counts to an area based on the known area of an identifier-dot. — convert_pixels_to_area_gui","text":"list computed areas key listed pixel.counts. Additionally, two meta-values returned well: identifier-area used calculating area (whichever value set option duflor.default_identifier_area) area singe pixel values [cm^2]","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/convert_pixels_to_area_gui.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"convert pixel counts to an area based on the known area of an identifier-dot. — convert_pixels_to_area_gui","text":"restructured version duflor::convert_pixels_to_area, suitable needs specific app.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/dev_key_handler.html","id":null,"dir":"Reference","previous_headings":"","what":"handles the setting and unsetting of debug-keys — dev_key_handler","title":"handles the setting and unsetting of debug-keys — dev_key_handler","text":"Keys begin 2 - considered boolean flags, must provided format --key=<boolean>, boolean following values allowed: T/TRUE/1 F/FALSE/0","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/dev_key_handler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"handles the setting and unsetting of debug-keys — dev_key_handler","text":"","code":"dev_key_handler(input, DATA, DEBUGKEYS, session, use_logical_cores)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/dev_key_handler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"handles the setting and unsetting of debug-keys — dev_key_handler","text":"input shiny-app input-object DATA shiny-app DATA-reactives DEBUGKEYS shiny-app DEBUGKEYS-reactives session shiny session use_logical_cores internal flag","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/dev_key_handler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"handles the setting and unsetting of debug-keys — dev_key_handler","text":"modified DEBUGKEYS?","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/dev_key_handler.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"handles the setting and unsetting of debug-keys — dev_key_handler","text":"Keys begin 3 - expecting non-boolean, custom input, differ based respective key.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/duflor_gui.html","id":null,"dir":"Reference","previous_headings":"","what":"Start the duflor-gui via this function importFrom shiny importFrom stringr str_ importFrom stringr str_ — duflor_gui","title":"Start the duflor-gui via this function importFrom shiny importFrom stringr str_ importFrom stringr str_ — duflor_gui","text":"Start duflor-gui via function importFrom shiny importFrom stringr str_ importFrom stringr str_","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/duflor_gui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start the duflor-gui via this function importFrom shiny importFrom stringr str_ importFrom stringr str_ — duflor_gui","text":"","code":"duflor_gui()"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/duflor_gui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start the duflor-gui via this function importFrom shiny importFrom stringr str_ importFrom stringr str_ — duflor_gui","text":".","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/execute_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"wrapper-function facilitating single- and multi-image analysis. — execute_analysis","title":"wrapper-function facilitating single- and multi-image analysis. — execute_analysis","text":"wrapper-function facilitating single- multi-image analysis.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/execute_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"wrapper-function facilitating single- and multi-image analysis. — execute_analysis","text":"","code":"execute_analysis(input, DATA, DEBUGKEYS, FLAGS)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/execute_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"wrapper-function facilitating single- and multi-image analysis. — execute_analysis","text":"input input respective shiny-component DATA DATA respective shiny-component DEBUGKEYS DEBUGKEYS respective shiny-component FLAGS FLAGS respective shiny-component","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/execute_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"wrapper-function facilitating single- and multi-image analysis. — execute_analysis","text":"list components results: results-data passed-execute_multiple() execute_single()","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/execute_multiple.html","id":null,"dir":"Reference","previous_headings":"","what":"execute analysis on multiple images, and return their results — execute_multiple","title":"execute analysis on multiple images, and return their results — execute_multiple","text":"single-image analysis, see execute_single()","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/execute_multiple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"execute analysis on multiple images, and return their results — execute_multiple","text":"","code":"execute_multiple(files, input, DATA, DEBUGKEYS, FLAGS)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/execute_multiple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"execute analysis on multiple images, and return their results — execute_multiple","text":"files files analyse input input respective shiny-component DATA DATA respective shiny-component DEBUGKEYS DEBUGKEYS respective shiny-component FLAGS FLAGS respective shiny-component","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/execute_multiple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"execute analysis on multiple images, and return their results — execute_multiple","text":"results_object, see update_resultsObject()","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/execute_single.html","id":null,"dir":"Reference","previous_headings":"","what":"execute analysis on a single image, and return its results — execute_single","title":"execute analysis on a single image, and return its results — execute_single","text":"single-image analysis, see execute_multiple()","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/execute_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"execute analysis on a single image, and return its results — execute_single","text":"","code":"execute_single(file, input, DATA, DEBUGKEYS, FLAGS)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/execute_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"execute analysis on a single image, and return its results — execute_single","text":"file file analyse input input respective shiny-component DATA DATA respective shiny-component DEBUGKEYS DEBUGKEYS respective shiny-component FLAGS FLAGS respective shiny-component","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/execute_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"execute analysis on a single image, and return its results — execute_single","text":"results_object, see update_resultsObject()","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/get_group.html","id":null,"dir":"Reference","previous_headings":"","what":"trims numbers from groups from character-vector — get_group","title":"trims numbers from groups from character-vector — get_group","text":"trims numbers groups character-vector","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/get_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"trims numbers from groups from character-vector — get_group","text":"","code":"get_group(names)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/get_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"trims numbers from groups from character-vector — get_group","text":"names .","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/get_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"trims numbers from groups from character-vector — get_group","text":".","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/get_image_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"retrieves image dimension via call to system interface — get_image_dimensions","title":"retrieves image dimension via call to system interface — get_image_dimensions","text":"retrieves image dimension via call system interface","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/get_image_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"retrieves image dimension via call to system interface — get_image_dimensions","text":"","code":"get_image_dimensions(path)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/get_image_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"retrieves image dimension via call to system interface — get_image_dimensions","text":"path path file measure","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/get_image_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"retrieves image dimension via call to system interface — get_image_dimensions","text":"list(width=dbl,height=dbl)","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/get_KPI_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"generate a ggplot for a given KPI — get_KPI_plot","title":"generate a ggplot for a given KPI — get_KPI_plot","text":"Function generates ggplot-object base selected choices DDLs","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/get_KPI_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate a ggplot for a given KPI — get_KPI_plot","text":"","code":"get_KPI_plot(input, DATA)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/get_KPI_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate a ggplot for a given KPI — get_KPI_plot","text":"input input respective shiny-component DATA DATA respective shiny-component","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/get_KPI_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generate a ggplot for a given KPI — get_KPI_plot","text":"ggplot-object respective KPI","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/key_handle_cores.html","id":null,"dir":"Reference","previous_headings":"","what":"internal function handling dev-key ---set.cores=XX — key_handle_cores","title":"internal function handling dev-key ---set.cores=XX — key_handle_cores","text":"internal function handling dev-key ---set.cores=XX","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/key_handle_cores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"internal function handling dev-key ---set.cores=XX — key_handle_cores","text":"","code":"key_handle_cores(value, DATA, use_logical_cores, session)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/key_handle_cores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"internal function handling dev-key ---set.cores=XX — key_handle_cores","text":"value . DATA . use_logical_cores . session .","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/limit_identifier_coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"restrict area in which identifier-pixels are considered ","title":"restrict area in which identifier-pixels are considered ","text":"function applied identifier-range. intention exclude random pixels definitely attributed identifier-data.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/limit_identifier_coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"restrict area in which identifier-pixels are considered ","text":"","code":"limit_identifier_coordinates(   spectrums_object,   image_dimensions,   identifiersearch_x0,   identifiersearch_x1,   identifiersearch_y0,   identifiersearch_y1 )"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/limit_identifier_coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"restrict area in which identifier-pixels are considered ","text":"spectrums_object return object extract_pixels_HSV() image_dimensions dimensions image identifiersearch_x0 respective coordinate search bounding rectangle identifiersearch_x1 respective coordinate search bounding rectangle identifiersearch_y0 respective coordinate search bounding rectangle identifiersearch_y1 respective coordinate search bounding rectangle","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/limit_identifier_coordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"restrict area in which identifier-pixels are considered ","text":"modified spectrums_object","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/open_parallelPanel_event.html","id":null,"dir":"Reference","previous_headings":"","what":"internal callback function for the checkbox opening the parallelisation-panel — open_parallelPanel_event","title":"internal callback function for the checkbox opening the parallelisation-panel — open_parallelPanel_event","text":"internal callback function checkbox opening parallelisation-panel","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/open_parallelPanel_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"internal callback function for the checkbox opening the parallelisation-panel — open_parallelPanel_event","text":"","code":"open_parallelPanel_event(   input,   DATA,   use_logical_cores,   session,   STARTUP,   default_init_cores = 2 )"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/open_parallelPanel_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"internal callback function for the checkbox opening the parallelisation-panel — open_parallelPanel_event","text":"input input respective shiny-component DATA DATA respective shiny-component use_logical_cores internal flag session shiny session STARTUP STARTUP respective shiny-component","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/prepare_resultsObject.html","id":null,"dir":"Reference","previous_headings":"","what":"prepare the dataframe-object into which all results are to be merged. — prepare_resultsObject","title":"prepare the dataframe-object into which all results are to be merged. — prepare_resultsObject","text":"results requires fields full_path image_date image_name processed_width processed_height  names(DATA$spectrums$lower_bound): %spectrum%_count img.fraction (maybe valuable?) %spectrum%_area (results duflor::convert_pixels_to_area()) %spectrum%_fraction (defined %spectrum%_count/(sum(<all_plant_spectrums>_count))","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/prepare_resultsObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prepare the dataframe-object into which all results are to be merged. — prepare_resultsObject","text":"","code":"prepare_resultsObject(input, DATA, DEBUGKEYS)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/prepare_resultsObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prepare the dataframe-object into which all results are to be merged. — prepare_resultsObject","text":"input shiny-app input-object DATA shiny-app DATA-reactives DEBUGKEYS shiny-app DEBUGKEYS-reactives","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/prepare_resultsObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"prepare the dataframe-object into which all results are to be merged. — prepare_resultsObject","text":"results-csv-framework.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/render_selected_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"render mask based on input data — render_selected_mask","title":"render mask based on input data — render_selected_mask","text":"render mask based input data","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/render_selected_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"render mask based on input data — render_selected_mask","text":"","code":"render_selected_mask(input, DATA, FLAGS)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/render_selected_mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"render mask based on input data — render_selected_mask","text":"input input respective shiny-component DATA DATA respective shiny-component FLAGS FLAGS respective shiny-component","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/select_spectra_gui_comp.html","id":null,"dir":"Reference","previous_headings":"","what":"generate and call a modal-dialogue which lets you select which spectrums to analyse. — select_spectra_gui_comp","title":"generate and call a modal-dialogue which lets you select which spectrums to analyse. — select_spectra_gui_comp","text":"Additionally, queries component radio_analysis_type preselect common results different types analyses","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/select_spectra_gui_comp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate and call a modal-dialogue which lets you select which spectrums to analyse. — select_spectra_gui_comp","text":"","code":"select_spectra_gui_comp(input)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/select_spectra_gui_comp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate and call a modal-dialogue which lets you select which spectrums to analyse. — select_spectra_gui_comp","text":"input input-shiny-component","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/select_spectra_gui_comp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generate and call a modal-dialogue which lets you select which spectrums to analyse. — select_spectra_gui_comp","text":".","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/setup_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"setup parallel backend for a given number of cores. — setup_parallel","title":"setup parallel backend for a given number of cores. — setup_parallel","text":"setup parallel backend given number cores.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/setup_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"setup parallel backend for a given number of cores. — setup_parallel","text":"","code":"setup_parallel(used_cores, cluster_type)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/setup_parallel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"setup parallel backend for a given number of cores. — setup_parallel","text":"used_cores number cores designated cluster cluster_type either PSOCK FORK. Generally FORK recommended PSOCK, however available systems. See note ","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/setup_parallel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"setup parallel backend for a given number of cores. — setup_parallel","text":".","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/setup_parallel.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"setup parallel backend for a given number of cores. — setup_parallel","text":"Windows, PSOCK-cluster type available.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/show_infringing_spectrum_elements_gui_comp.html","id":null,"dir":"Reference","previous_headings":"","what":"generate and call a modal-dialogue which displays the prospective changes in HSV-spectrums — show_infringing_spectrum_elements_gui_comp","title":"generate and call a modal-dialogue which displays the prospective changes in HSV-spectrums — show_infringing_spectrum_elements_gui_comp","text":"Additionally, queries whether applied, reset previous value.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/show_infringing_spectrum_elements_gui_comp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate and call a modal-dialogue which displays the prospective changes in HSV-spectrums — show_infringing_spectrum_elements_gui_comp","text":"","code":"show_infringing_spectrum_elements_gui_comp(input, DATA, changes)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/show_infringing_spectrum_elements_gui_comp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate and call a modal-dialogue which displays the prospective changes in HSV-spectrums — show_infringing_spectrum_elements_gui_comp","text":"input input respective shiny-component DATA DATA respective shiny-component changes results-object validate_custom_HSV_values()","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/show_infringing_spectrum_elements_gui_comp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generate and call a modal-dialogue which displays the prospective changes in HSV-spectrums — show_infringing_spectrum_elements_gui_comp","text":".","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/shutdown_parallel.html","id":null,"dir":"Reference","previous_headings":"","what":"shut down existing parallel cluster — shutdown_parallel","title":"shut down existing parallel cluster — shutdown_parallel","text":"shut existing parallel cluster","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/shutdown_parallel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"shut down existing parallel cluster — shutdown_parallel","text":"","code":"shutdown_parallel()"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/store_KPI_plot_to_file.html","id":null,"dir":"Reference","previous_headings":"","what":"save KPI-plot to file — store_KPI_plot_to_file","title":"save KPI-plot to file — store_KPI_plot_to_file","text":"save KPI-plot file","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/store_KPI_plot_to_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"save KPI-plot to file — store_KPI_plot_to_file","text":"","code":"store_KPI_plot_to_file(input, DATA)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/store_KPI_plot_to_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"save KPI-plot to file — store_KPI_plot_to_file","text":"input input respective shiny-component DATA DATA respective shiny-component","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/store_results_to_file.html","id":null,"dir":"Reference","previous_headings":"","what":"write results of the analysis to file — store_results_to_file","title":"write results of the analysis to file — store_results_to_file","text":"write results analysis file","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/store_results_to_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write results of the analysis to file — store_results_to_file","text":"","code":"store_results_to_file(   results,   results_path,   save_to_xlsx = FALSE,   set_author_xlsx = FALSE )"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/store_results_to_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write results of the analysis to file — store_results_to_file","text":"results object write. results_path path write file , sans filesuffix. save_to_xlsx results written .xlsx-file? false, written .csv-file instead. set_author_xlsx writing xlsx-file, author set generated 'duflor' via 'duflor.gui', user_machine XX?","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/store_results_to_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"write results of the analysis to file — store_results_to_file","text":"list containing boolean check whether file written disk successfully complete path resulting file.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/store_results_to_file.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"write results of the analysis to file — store_results_to_file","text":"XLSX-files suggested output additional postprocessing required. data modified , writing csv save space.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/update_resultsObject.html","id":null,"dir":"Reference","previous_headings":"","what":"adds a line of values newline to a df resultsObject — update_resultsObject","title":"adds a line of values newline to a df resultsObject — update_resultsObject","text":"function validate inputs!.","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/update_resultsObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"adds a line of values newline to a df resultsObject — update_resultsObject","text":"","code":"update_resultsObject(resultsObject, new_line)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/update_resultsObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"adds a line of values newline to a df resultsObject — update_resultsObject","text":"resultsObject existing dataframe new_line data-vector add","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/update_resultsObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"adds a line of values newline to a df resultsObject — update_resultsObject","text":"updated resultsObject","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/validate_custom_HSV_values.html","id":null,"dir":"Reference","previous_headings":"","what":"ensure that custom HSV values are within required range — validate_custom_HSV_values","title":"ensure that custom HSV values are within required range — validate_custom_HSV_values","text":"HUE, value must within [0, 359] SATURATIOn, value must within [0, 1] VALUE, value must within [0, 1]","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/validate_custom_HSV_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ensure that custom HSV values are within required range — validate_custom_HSV_values","text":"","code":"validate_custom_HSV_values(input, DATA, session)"},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/validate_custom_HSV_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ensure that custom HSV values are within required range — validate_custom_HSV_values","text":"input input respective shiny-component DATA DATA respective shiny-component session shiny session","code":""},{"path":"https://Claudius-Appel.github.io/duflor.gui/reference/validate_custom_HSV_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ensure that custom HSV values are within required range — validate_custom_HSV_values","text":"list containing expected bounds keys specific bound violated, along violated value","code":""}]
